---
import LayoutCatalogo from '../../layouts/LayoutCatalogo.astro';
const { autoId } = Astro.params;
import { getVehicleById } from '../../utils/vehicleUtils'; // Asumimos que esta función es una llamada asincrónica

let vehicle = null; // Inicializamos como null
let loading = true; // Indicador de carga

// Verificamos que el autoId sea válido
if (!autoId) {
  throw new Error('autoId no está definido. Verifica la ruta o las params.');
}

try {
  vehicle = await getVehicleById(autoId); // Llamada a la función para obtener el vehículo por ID
  loading = false; // Cambiamos el estado de carga una vez que tenemos los datos
} catch (error) {
  console.error('Error al cargar los datos del vehículo:', error);
  throw new Error(`Error al obtener los datos del vehículo con ID ${autoId}`);
}

// Validamos si el vehículo existe después de la solicitud
if (!vehicle) {
  throw new Error(`Auto con ID ${autoId} no encontrado.`);
}
---
<LayoutCatalogo title={`${vehicle.brand} ${vehicle.model} ${vehicle.year}`}>
  <main>
    {loading ? (
      <div class="loader">Cargando...</div>
    ) : (
      <>
        <nav class="breadcrumb">
          <a href="/">Home</a> / <a href="/catalogo">Catálogo</a> / <span>{vehicle.brand} {vehicle.model}</span>
        </nav>

        <div class="vehicle-container">
          <!-- Sección de imagen -->
          <div class="image-section">
            <img 
              src={vehicle.image} 
              alt={`${vehicle.brand} ${vehicle.model}`} 
            />
            <div class="description my-2 rounded-lg p-2">
              <h2 class="italic font-bold">Descripción del vehículo</h2>
             {vehicle.description ? vehicle.description : <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Officia beatae aliquid nulla nisi quis mollitia, non cupiditate atque ducimus saepe ex placeat tenetur laborum iusto quam commodi alias sapiente molestiae.</p>} 
            </div>
          </div>

          <!-- Sección de información -->
          <div class="info-section">
            <h1>{vehicle.brand} {vehicle.model}</h1>
            <div class="price">{vehicle.price} USD</div>

            <div class="specs">
              <span class="text-xl font-medium">Ficha técnica</span>
              <div class="spec-item">
                <span class="label">Año:</span>
                <span class="value">{vehicle.year}</span>
              </div>
              <div class="spec-item">
                <span class="label">Tipo de carrocería:</span>
                <span class="value">{vehicle.body_type}</span>
              </div>
              <div class="spec-item">
                <span class="label">Motor:</span>
                <span class="value">{vehicle.engine}</span>
              </div>
            </div>

            <div class="actions">
              <a href={`/contacto?id=${vehicle.id}`} class="contact-btn text-center">Contactar vendedor</a>
              <a href={`/contacto?id=${vehicle.id}&drive=true`} class="schedule-btn text-center">Agendar prueba de manejo</a>
            </div>
          </div>
        </div>
      </>
    )}
  </main>
</LayoutCatalogo>

  <style>
    main {
      margin: auto;
      padding: 2rem;
      max-width: 1200px;
      color: #333;

    }
  
    .breadcrumb {
      margin-bottom: 2rem;
      color: #555;
    }
  
    .breadcrumb a {
      color: #555;
      text-decoration: none;
    }
  
    .breadcrumb a:hover {
      color: #000;
    }
  
    .vehicle-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      background: #fff;
      border-radius: 12px;
      padding: 2rem;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
  
    .image-section img {
      width: 100%;
      height: auto;
      border-radius: 8px;
    }
    
    .info-section h1 {
      font-size: 2.5rem;
      margin: 0 0 1rem 0;
      color: #222;
    }
  
    .price {
      font-size: 2rem;
      color: #388e3c;
      margin-bottom: 2rem;
    }
  
    .specs {
      display: grid;
      
      margin-bottom: 2rem;
    }
  
    .spec-item {
      display: flex;
      justify-content: space-between;
      padding: 1rem;
      background: #f1f1f1;
      border-bottom: 2px solid #e0e0e0;
     
    }
  
    .label {
      color: #555;
    }
  
    .value {
      font-weight: bold;
      color: #222;
    }
  
    .actions {
      display: grid;
      gap: 1rem;
    }
  
    .actions a {
      padding: 1rem;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: transform 0.2s, background-color 0.3s;
    }
  
    .actions a:hover {
      transform: translateY(-2px);
    }
  
    .contact-btn {
      background: #104376;
      color: white;
    }
    .contact-btn:hover {
      background: #21bd36;
      color: white;
    }
  
   
    .schedule-btn {
      background: #e0e0e0;
      color: #333;
      border: 1px solid #ccc;
    }
  
    .schedule-btn:hover {
      background: #d5d5d5;
    }
  
    @media (max-width: 768px) {
      .vehicle-container {
        grid-template-columns: 1fr;
      }
    }
  </style>
